IssuesInScopeAsOfDay =
VAR CurrentDay = SELECTEDVALUE('Calendar'[Date])
VAR SelectedTeam = SELECTEDVALUE(Teams[Team])
VAR SelectedSprint = SELECTEDVALUE(SprintmetaData[sprint])
VAR SelectedType = SELECTEDVALUE(IssueTypes[issue_type_name])
RETURN
SUMX (
    MetaRisk_GitHub_Data,
    VAR IssueID = MetaRisk_GitHub_Data[content_id]
    VAR Created = MetaRisk_GitHub_Data[content_created_at]
    
    // Team as of current day
    VAR TeamAsOfDay = 
        VAR LastTeamChange = 
            CALCULATE(
                MAX(issue_changelog[date]),
                FILTER(
                    issue_changelog,
                    issue_changelog[content_id] = IssueID &&
                    issue_changelog[field] = "team" &&
                    issue_changelog[date] <= CurrentDay
                )
            )
        RETURN 
            IF(
                ISBLANK(LastTeamChange),
                MetaRisk_GitHub_Data[team],
                CALCULATE(
                    MAX(issue_changelog[new_value]),
                    FILTER(
                        issue_changelog,
                        issue_changelog[content_id] = IssueID &&
                        issue_changelog[field] = "team" &&
                        issue_changelog[date] = LastTeamChange
                    )
                )
            )
    
    // Sprint as of current day
    VAR SprintAsOfDay =
        VAR LastSprintChange = 
            CALCULATE(
                MAX(issue_changelog[date]),
                FILTER(
                    issue_changelog,
                    issue_changelog[content_id] = IssueID &&
                    issue_changelog[field] = "sprint" &&
                    issue_changelog[date] <= CurrentDay
                )
            )
        RETURN 
            IF(
                ISBLANK(LastSprintChange),
                MetaRisk_GitHub_Data[sprint],
                CALCULATE(
                    MAX(issue_changelog[new_value]),
                    FILTER(
                        issue_changelog,
                        issue_changelog[content_id] = IssueID &&
                        issue_changelog[field] = "sprint" &&
                        issue_changelog[date] = LastSprintChange
                    )
                )
            )
    
    // Type as of current day
    VAR TypeAsOfDay =
        VAR LastTypeChange = 
            CALCULATE(
                MAX(issue_changelog[date]),
                FILTER(
                    issue_changelog,
                    issue_changelog[content_id] = IssueID &&
                    issue_changelog[field] = "issue_type_name" &&
                    issue_changelog[date] <= CurrentDay
                )
            )
        RETURN 
            IF(
                ISBLANK(LastTypeChange),
                MetaRisk_GitHub_Data[issue_type_name],
                CALCULATE(
                    MAX(issue_changelog[new_value]),
                    FILTER(
                        issue_changelog,
                        issue_changelog[content_id] = IssueID &&
                        issue_changelog[field] = "issue_type_name" &&
                        issue_changelog[date] = LastTypeChange
                    )
                )
            )
    
    // Status as of current day
    VAR StatusAsOfDay =
        VAR LastStatusChange = 
            CALCULATE(
                MAX(issue_changelog[date]),
                FILTER(
                    issue_changelog,
                    issue_changelog[content_id] = IssueID &&
                    issue_changelog[field] = "status" &&
                    issue_changelog[date] <= CurrentDay
                )
            )
        RETURN 
            IF(
                ISBLANK(LastStatusChange),
                MetaRisk_GitHub_Data[status],
                CALCULATE(
                    MAX(issue_changelog[new_value]),
                    FILTER(
                        issue_changelog,
                        issue_changelog[content_id] = IssueID &&
                        issue_changelog[field] = "status" &&
                        issue_changelog[date] = LastStatusChange
                    )
                )
            )

    RETURN
    IF(
        Created <= CurrentDay &&
        TeamAsOfDay = SelectedTeam &&
        SprintAsOfDay = SelectedSprint &&
        TypeAsOfDay = SelectedType &&
        StatusAsOfDay <> "Closed",
        1,
        0
    )
)
