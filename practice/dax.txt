Open Issues In Sprint By Day =
VAR SelectedSprint = SELECTEDVALUE(SprintmetaData[sprint])
VAR SelectedDate = SELECTEDVALUE('Calendar'[date])

VAR IssuesEverInSprint =
    DISTINCT (
        UNION (
            SELECTCOLUMNS(
                FILTER(MetaRisk_GitHub_Data, MetaRisk_GitHub_Data[sprint] = SelectedSprint),
                "content_id", MetaRisk_GitHub_Data[content_id]
            ),
            SELECTCOLUMNS(
                FILTER(SprintAssignments, SprintAssignments[sprint] = SelectedSprint),
                "content_id", SprintAssignments[content_id]
            ),
            SELECTCOLUMNS(
                FILTER(issue_changelog, issue_changelog[field] = "sprint" && issue_changelog[new_value] = SelectedSprint),
                "content_id", issue_changelog[content_id]
            )
        )
    )

RETURN
COUNTROWS (
    FILTER (
        IssuesEverInSprint,
        VAR IssueId = [content_id]

        VAR EnterDates =
            SELECTCOLUMNS(
                UNION (
                    SELECTCOLUMNS(
                        FILTER(issue_changelog, issue_changelog[content_id] = IssueId && issue_changelog[field] = "sprint" && issue_changelog[new_value] = SelectedSprint),
                        "EnterDate", issue_changelog[date]
                    ),
                    SELECTCOLUMNS(
                        FILTER(SprintAssignments, SprintAssignments[content_id] = IssueId && SprintAssignments[sprint] = SelectedSprint),
                        "EnterDate", SprintAssignments[assigned_date]
                    ),
                    SELECTCOLUMNS(
                        FILTER(MetaRisk_GitHub_Data, MetaRisk_GitHub_Data[content_id] = IssueId && MetaRisk_GitHub_Data[sprint] = SelectedSprint),
                        "EnterDate", MetaRisk_GitHub_Data[created_date]
                    )
                ),
                "EnterDate", [EnterDate]
            )

        VAR ExitDates =
            SELECTCOLUMNS(
                UNION (
                    SELECTCOLUMNS(
                        FILTER(issue_changelog, issue_changelog[content_id] = IssueId && issue_changelog[field] = "sprint" && issue_changelog[old_value] = SelectedSprint && issue_changelog[new_value] <> SelectedSprint),
                        "ExitDate", issue_changelog[date]
                    ),
                    SELECTCOLUMNS(
                        FILTER(issue_changelog, issue_changelog[content_id] = IssueId && issue_changelog[field] = "content_state" && issue_changelog[new_value] = "CLOSED"),
                        "ExitDate", issue_changelog[date]
                    )
                ),
                "ExitDate", [ExitDate]
            )

        VAR OpenPeriods =
            ADDCOLUMNS (
                EnterDates,
                "ExitDate",
                    VAR ThisEnter = [EnterDate]
                    VAR NextExit =
                        CALCULATE (
                            MIN ( 'ExitDates'[ExitDate] ),
                            FILTER (
                                ExitDates,
                                'ExitDates'[ExitDate] > ThisEnter
                            )
                        )
                    RETURN IF ( ISBLANK ( NextExit ), DATE(2099,1,1), NextExit )
            )

        VAR IsOpenOnDate =
            MAXX (
                FILTER (
                    OpenPeriods,
                    [EnterDate] <= SelectedDate &&
                    SelectedDate < [ExitDate]
                ),
                1
            )

        RETURN
            IsOpenOnDate = 1
    )
)
