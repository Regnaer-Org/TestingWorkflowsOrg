import os
import textwrap

def prompt_for_list(title):
    """Generic function to prompt for a list of items."""
    print(f"\n--- {title} ---")
    print(f"List the {title.lower()} (one per line, type 'done' when finished):")
    items = []
    while True:
        item = input("> ")
        if item.lower() == 'done':
            break
        items.append(item)
    return items

def main():
    """Main function to run the project setup wizard."""
    print("--- Project Setup Wizard ---")
    print("Let's get your new project set up. Please answer the following questions.\n")

    # --- Gather Information ---
    project_name = input("Enter the project name (e.g., 'Reinsurance Pricing Engine'): ")
    persona = input("Enter the primary user persona (e.g., 'Junior Actuarial Analyst'): ")
    problem = input("Describe the core problem this project solves: ")
    business_case = input("Describe the business case (why should we build this?): ")

    goals = prompt_for_list("Project Goals")
    stakeholders = prompt_for_list("Stakeholders")

    print("\n--- Glossary ---")
    print("Let's build a glossary.")
    glossary = {}
    while True:
        term = input("Enter a term (e.g., 'IBNR'): ")
        definition = input(f"Enter the definition for '{term}': ")
        glossary[term] = definition
        another = input("Add another term? (y/n): ")
        if another.lower() != 'y':
            break

    epics = prompt_for_list("Epics (In-Scope Features)")

    # --- Generate Files ---
    print("\nProcessing...")

    # Create docs directory if it doesn't exist
    if not os.path.exists('docs'):
        os.makedirs('docs')
        print("- Creating docs/ directory")

    # 1. README.md
    print("- Generating README.md")
    readme_content = f"""
    # {project_name}

    ## 1. Executive Summary

    **Problem:** {problem}

    **Solution:** This project aims to deliver a solution that addresses the core problem by focusing on the goals outlined below. The primary user for this solution is the **{persona}**.

    **Business Case:** {business_case}

    ## 2. Project Goals

    The primary objectives for this project are:
    {''.join([f'- {goal}\\n' for goal in goals])}
    ## 3. Stakeholders

    The key stakeholders for this project are:
    {''.join([f'- {stakeholder}\\n' for stakeholder in stakeholders])}
    """
    with open('README.md', 'w') as f:
        f.write(textwrap.dedent(readme_content).strip())

    # 2. Persona Card
    print("- Generating docs/persona_card.md")
    persona_content = f"""
    # Persona Card

    ## Primary Persona: {persona}

    *(This is a placeholder. The Product Owner should expand this with more details about the user's goals, frustrations, and daily tasks.)*
    """
    with open('docs/persona_card.md', 'w') as f:
        f.write(textwrap.dedent(persona_content).strip())

    # 3. Glossary
    print("- Generating docs/reinsurance_terms_glossary.md")
    glossary_content = "# Reinsurance Terms Glossary\n\n"
    for term, definition in glossary.items():
        glossary_content += f"### {term}\n{definition}\n\n"
    with open('docs/reinsurance_terms_glossary.md', 'w') as f:
        f.write(glossary_content.strip())

    # 4. Epic Creation Script
    print("- Generating create_epics.sh to create your issues in GitHub")
    script_content = "#!/bin/sh\n"
    script_content += "# This script was generated by the project_setup_wizard.py\n"
    script_content += "# It will create the initial epics for your project in GitHub.\n\n"
    for epic in epics:
        # Escaping quotes for the shell command
        safe_epic_title = epic.replace("'", "'\\''")
        script_content += f"gh issue create --title '{safe_epic_title}' --body 'This is an epic. It should be broken down into user stories.' --label 'epic'\n"

    with open('create_epics.sh', 'w') as f:
        f.write(script_content)
    # Make the script executable
    os.chmod('create_epics.sh', 0o755)

    print("\n--- Setup Complete! ---")
    print("Your project foundation has been created.\n")
    print("NEXT STEP: To create your initial epics in GitHub, run the following command:")
    print("sh create_epics.sh\n")
    print("After that, initialize your git repository, add the files, and push them to GitHub.")


if __name__ == '__main__':
    main()
