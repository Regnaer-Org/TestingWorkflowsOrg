name: Daily Agile Snapshot CSV (v3 - Python) # Updated name for clarity

on:
  workflow_dispatch: # Manual trigger
  schedule:
    # 5:00 PM Central = 22:00 UTC (adjust as needed)
    - cron: '0 22 * * *'

permissions:
  contents: write # Needed to commit the CSV

jobs:
  fetch-issues:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Or your preferred Python version

      # Step 3: Install required Python packages
      - name: Install Python Dependencies
        run: pip install requests # requests library is needed by the script

      # Step 4: Execute the Python script
      # The script handles fetching, processing, and saving the CSV
      # It also determines the filename and outputs it for the commit step
      - name: Run Agile Data Processing Script
        id: python_script # Add an ID to reference outputs
        run: python .github/scripts/fetch_project_issues.py
        env:
          # Pass secrets and config needed by the script as environment variables
          MILESTONE_SYNC_TOKEN: ${{ secrets.MILESTONE_SYNC }}
          PROJECT_ID: "PVT_kwDODH0FwM4A3yi4" # Or use a secret: ${{ secrets.PROJECT_ID }}

      # Step 5: Commit the generated snapshot CSV to the repository
      - name: Commit and push snapshot to repo
        # Only run if the python script step succeeded AND produced the filename output
        if: success() && steps.python_script.outputs.snapshot_filename
        run: |
          # Get the full path output by the script
          FULL_FILENAME="${{ steps.python_script.outputs.snapshot_filename }}"
          # Extract just the date part from the filename for the commit message (using bash parameter expansion)
          FILENAME_ONLY=$(basename "$FULL_FILENAME")
          SNAPSHOT_DATE=${FILENAME_ONLY#project.issues_} # Remove prefix
          SNAPSHOT_DATE=${SNAPSHOT_DATE%.csv} # Remove suffix

          echo "Committing file: $FULL_FILENAME"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Add the specific file generated by the script
          git add "$FULL_FILENAME"

          # Check if there are changes to commit for this specific file
          # Use the full path for checking the diff
          if git diff --staged --quiet "$FULL_FILENAME"; then
            echo "No changes detected in $FILENAME_ONLY. Nothing to commit."
          else
            git commit -m "Agile snapshot for $SNAPSHOT_DATE (automated)"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use default token for commit
