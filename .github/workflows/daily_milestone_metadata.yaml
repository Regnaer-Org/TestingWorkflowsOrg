name: Daily Milestone Metadata CSV

on:
  workflow_dispatch: # Manual trigger
  schedule:
    # Choose a schedule (e.g., daily at 22:10 UTC)
    - cron: '10 22 * * *'

permissions:
  contents: write # Needed to commit the CSV

jobs:
  fetch-milestones:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 3: Install required Python packages
      - name: Install Python Dependencies
        run: pip install requests

      # Step 4: Execute the Python script to fetch milestone data
      - name: Run Milestone Fetch Script
        id: python_script
        run: python .github/scripts/fetch_milestones.py
        env:
          MILESTONE_SYNC_TOKEN: ${{ secrets.MILESTONE_SYNC }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}

      # Step 5: Commit the generated milestone CSV to the repository <<< CHANGED
      - name: Commit and push milestone metadata
        # Check if script succeeded and output the filename
        if: success() && steps.python_script.outputs.milestone_filename
        run: |
          # Get the full path output by the script (e.g., agilereportingmetadata/milestone_metadata.csv)
          FULL_FILENAME="${{ steps.python_script.outputs.milestone_filename }}"
          FILENAME_ONLY=$(basename "$FULL_FILENAME") # Should be milestone_metadata.csv

          echo "Committing file: $FULL_FILENAME"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Add the specific file generated by the script
          git add "$FULL_FILENAME"

          # Check if there are changes to commit for this specific file
          if git diff --staged --quiet "$FULL_FILENAME"; then
            echo "No changes detected in $FILENAME_ONLY. Nothing to commit."
          else
            # Use a generic commit message since the date isn't in the filename
            git commit -m "Update milestone metadata (automated)"
            echo "Pushing changes..."
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use default token for commit
